% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Grym.R
\name{powerLW}
\alias{powerLW}
\alias{powerWL}
\title{Power law length weight}
\usage{
powerLW(L, a, b)

powerWL(W, a, b)
}
\arguments{
\item{L}{a vector or matrix of lengths}

\item{a}{scale parameter}

\item{b}{power parameter}

\item{W}{a vector or matrix of weights}
}
\value{
\code{powerLW} returns a vector or matrix of weights
corresponding to the lengths \code{L} and \code{powerLW} returns a vector
or matrix of lengths corresponding to the weights \code{W}.
}
\description{
Power law length-weight relationship and its inverse.
}
\details{
These functions compute power law length weight relationship
using the same parameterization implemented in the GYM.
}
\examples{
len <- seq(from=150, to=450, by=50)

## Convert length to weight
wgt <- powerLW(L=len, a=9.0E-10, b=3.32)
wgt

## Convert weigth to length
len <- powerWL(W=wgt, a=9.0E-10, b=3.32)
len

## Daily time steps and 7 age classes
nsteps <- 365
Ages <- 2:8
Days <- seq(from=0, to=1, length=nsteps+1)
h <- 1/nsteps

## Ages
ages <- outer(X=Days, Y=Ages, FUN="+")

## Age-length conversion
ls <- vonBertalanffyAL(A=ages, t0=0.0667, K=0.5, Linf=500)

## Length-weight conversion
ws <- powerLW(L=ls, a=9E-10, b=3.32)
matplot(x=Days, y=ws, type="l",lty=1,xlab="Day",ylab="Weight",main="Weight at Age")
}
\seealso{
\code{\link[=vonBertalanffyAL]{vonBertalanffyAL()}} for age-length modelling.
}
