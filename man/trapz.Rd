% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Grym.R
\name{trapz}
\alias{trapz}
\alias{ctrapz}
\title{Trapezoidal Quadrature}
\usage{
trapz(fs, h = 1)

ctrapz(fs, h = 1)
}
\arguments{
\item{fs}{a vector or matrix of function values}

\item{h}{the width of each subinterval}
}
\value{
\itemize{
\item \code{trap} returns the approximation to the integral of the function
or functions represented by \code{fs}.
\item \code{ctrapz} returns a vector or matrix of the same size as \code{fs}
representing the approximate cumulative integrals of the function
or functions represented by \code{fs}.
}
}
\description{
Numerical quadrature by the composite trapezoidal rule.
}
\details{
Given a vector \code{fs} of function values evaluated over an even
partition of an interval, \code{trapz} approximates the definite
integral over the interval by the composite \href{wikipedia.org/wiki/Trapezoidal_rule}{trapezoidal rule}, while \code{ctrapz}
approximates the cumulative integral over successive subintervals.
If \code{fs} is a matrix then each column is assumed to correspond to a
different function and an approximation is computed for each
column.
}
\examples{
## The definite integral of 2*x from 1 to x is x^2-1
x <- 1:5
ctrapz(fs=2*x, h=1)
trapz(fs=2*x, h=1)

## Integrate cos(x),  sin(x)
h <- 2*pi/100
x <- seq(from=0, to=2*pi, by=h)
cs <- cbind(cos(x), sin(x))
matplot(x=x, y=ctrapz(fs=cs, h=h), type="l", lty=1, col=c("dodgerblue", "firebrick")) 
}
