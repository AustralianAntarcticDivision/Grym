% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/Grym.R
\name{prBootstrap}
\alias{prBootstrap}
\title{Proportional Recruit Bootstrap}
\usage{
prBootstrap(prRec, ps, n, Msf, mnA = 1, r = 1, plus = 0)
}
\arguments{
\item{prRec}{a function for generating random recruits by a
proportional recruitment model}

\item{ps}{a list of model parameters}

\item{n}{number of independent surveys used in the estimation of
the mean and variance of R}

\item{Msf}{matrix of final unscaled integrated natural mortalities}

\item{mnA}{mean number of recruits}

\item{r}{the reference age class}

\item{plus}{the number of additional age classes in the plus class
(\code{plus=0} implies no plus class).}
}
\value{
Return a list with elements
\itemize{
\item \code{mnR} simulated mean of R
\item \code{vrR} simulated variance of R
\item \code{p} simulated probability of zero recruitment
\item \code{n} number os surveys used in simulation
\item \code{r} reference age class
}
}
\description{
Simulate the mean and variance for the proportional recruits model
by parametric bootstrap when the distribution of the fraction of
recruits is inverse Beta (IB), Gamma (G) or log Normal (LN).
}
\details{
The proportional recruit model defines R, the number of
individuals in age class r as a proportion of the population of
the same age or older, and assumes estimates of the mean and
variance of R are available from independent surveys. To allow for
the variability in these estimates, these functions use
parameteric bootstrap to simulate new values for the mean and
variance of R that are consistent with the observed values and the
chosen distributional model.
}
\examples{
## Daily time steps and 7 age classes
nsteps <- 365
Ages <- 2:8
Days <- seq(0,1,length=nsteps+1)
h <- 1/nsteps

## Ages
ages <- outer(Days,Ages,FUN="+")
## Age-length and length-weight conversions
ls <- vonBertalanffyAL(ages,t0=0.0667,K=0.5,Linf=500)
ws <- powerLW(ls,9E-10,3.32)

## Constant intra-annual natural mortality
ms <- matrix(1,nsteps+1,length(Ages))
ms <- ms/mean(trapz(ms,h))
Ms <- ctrapz(ms,h)
Msf <- final(Ms)
M <- 0.2

## Compute model parameters that give mean R = 0.3 and var R = 0.01,
## when R is the proportion of recruits in the population
ps <- prRecruitParsIB(mnR=0.3,vrR=0.01,Msf)

## Simulate new mean and variance for 17 surveys
prBootstrap(prRecruitsIB,ps,17,Msf)

## Distribution of 2000 samples
bs <- replicate(2000,unlist(prBootstrap(prRecruitsIB,ps,17,Msf)))
opar <- par(mfrow=c(1,2))
hist(bs[1,],50,xlab="Mean R",main="")
abline(v=median(bs[1,]),col="red")
hist(bs[2,],50,xlab="Variance R",main="")
abline(v=median(bs[2,]),col="red")
par(opar)

## Compute model parameters that give mean R = 0.3 and var R = 0.01,
## when R is the proportion of recruits in the population
ps <- prRecruitParsG(mnR=0.3,vrR=0.01,Msf)

## Simulate new mean and variance for 17 surveys
prBootstrap(prRecruitsG,ps,17,Msf)

## Distribution of 2000 samples
bs <- replicate(2000,unlist(prBootstrap(prRecruitsG,ps,17,Msf)))
opar <- par(mfrow=c(1,2))
hist(bs[1,],50,xlab="Mean R",main="")
abline(v=median(bs[1,]),col="red")
hist(bs[2,],50,xlab="Variance R",main="")
abline(v=median(bs[2,]),col="red")
par(opar)

## Compute model parameters that give mean R = 0.3 and var R = 0.01,
## when R is the proportion of recruits in the population
ps <- prRecruitParsLN(mnR=0.3,vrR=0.01,Msf)

## Simulate new mean and variance for 17 surveys
prBootstrap(prRecruitsLN,ps,17,Msf)

## Distribution of 2000 samples
bs <- replicate(2000,unlist(prBootstrap(prRecruitsLN,ps,17,Msf)))
opar <- par(mfrow=c(1,2))
hist(bs[1,],50,xlab="Mean R",main="")
abline(v=median(bs[1,]),col="red")
hist(bs[2,],50,xlab="Variance R",main="")
abline(v=median(bs[2,]),col="red")
par(opar)

## Compute model parameters that give mean R = 0.3 and var R = 0.01,
## when R is the proportion of recruits in the population
ps <- prRecruitParsGYM(mnR=0.3,vrR=0.01,Msf)

## Simulate new mean and variance for 17 surveys
prBootstrap(prRecruitsGYM,ps,17,Msf)

## Distribution of 2000 samples
bs <- replicate(2000,unlist(prBootstrap(prRecruitsGYM,ps,17,Msf)))
opar <- par(mfrow=c(1,2))
hist(bs[1,],50,xlab="Mean R",main="")
abline(v=median(bs[1,]),col="red")
hist(bs[2,],50,xlab="Variance R",main="")
abline(v=median(bs[2,]),col="red")
par(opar)
}
